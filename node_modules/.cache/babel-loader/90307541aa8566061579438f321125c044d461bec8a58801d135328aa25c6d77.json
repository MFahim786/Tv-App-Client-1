{"ast":null,"code":"// import api from './api';\n\nconst authService = async () => {\n  try {\n    const response = await fetch(`${baseurl}/api/videoupload/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n        // Add any additional headers if required\n      },\n      // Add body data if required\n      body: JSON.stringify({\n        videoUrl: videoUrl,\n        videoName: videoCategory,\n        videoCategory: videoName\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add video');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error adding video:', error);\n    throw error;\n  }\n};\nexport default authService;","map":{"version":3,"names":["authService","response","fetch","baseurl","method","headers","body","JSON","stringify","videoUrl","videoName","videoCategory","ok","Error","data","json","error","console"],"sources":["/Users/developer/Project/React/tv-app-client/src/services/authService.js"],"sourcesContent":["// import api from './api';\n\nconst authService =async ()=> {\n    \n    try {\n      const response = await fetch(`${baseurl}/api/videoupload/`, {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n              // Add any additional headers if required\n          },\n          // Add body data if required\n          body: JSON.stringify({\n              videoUrl: videoUrl,\n              videoName: videoCategory,\n              videoCategory: videoName,\n          }),\n      });\n\n      if (!response.ok) {\n          throw new Error('Failed to add video');\n      }\n\n      const data = await response.json();\n      return data;\n  } catch (error) {\n      console.error('Error adding video:', error);\n      throw error;\n  }\n};\n\n\nexport default authService;\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAE,MAAAA,CAAA,KAAW;EAE1B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAQ,mBAAkB,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;QAChB;MACJ,CAAC;MACD;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEA,QAAQ;QAClBC,SAAS,EAAEC,aAAa;QACxBA,aAAa,EAAED;MACnB,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACT,QAAQ,CAACW,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IAC1C;IAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACf;AACF,CAAC;AAGD,eAAehB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}