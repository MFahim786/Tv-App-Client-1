{"ast":null,"code":"// import api from './api';\n\nconst authService = {\n  login: async (username, password) => {\n    try {\n      // Perform login operation and return response\n      // Example:\n      const response = await fetch('http://localhost:8000/api/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      if (response.ok) {\n        console.log(\"Request is recived\");\n        return await response.json(); // Return response data\n      } else {\n        throw new Error('Login failed'); // Throw error if login fails\n      }\n    } catch (error) {\n      throw new Error('Login failed'); // Throw error if an exception occurs\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["authService","login","username","password","response","fetch","method","body","JSON","stringify","ok","console","log","json","Error","error"],"sources":["/Users/developer/Project/React/tv-app-client/src/services/authService.js"],"sourcesContent":["// import api from './api';\n\nconst authService = {\n\n  login: async (username, password) => {\n    \n      try {\n          // Perform login operation and return response\n          // Example:\n          const response = await fetch('http://localhost:8000/api/login', {\n              method: 'POST',\n             \n              body: JSON.stringify({\n                  username: username,\n                  password: password\n              })\n          });\n          if (response.ok) {\n            console.log(\"Request is recived\")\n              return await response.json(); // Return response data\n             \n          } else {\n              throw new Error('Login failed'); // Throw error if login fails\n          }\n      } catch (error) {\n          throw new Error('Login failed'); // Throw error if an exception occurs\n      }\n  }\n};\n\n\nexport default authService;\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAG;EAElBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAEjC,IAAI;MACA;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC5DC,MAAM,EAAE,MAAM;QAEdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBP,QAAQ,EAAEA,QAAQ;UAClBC,QAAQ,EAAEA;QACd,CAAC;MACL,CAAC,CAAC;MACF,IAAIC,QAAQ,CAACM,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QAC/B,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;MAElC,CAAC,MAAM;QACH,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;MACrC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAM,IAAID,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;IACrC;EACJ;AACF,CAAC;AAGD,eAAed,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}